<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">
   
    <!-- 拦截,表单验证 -->
    <mvc:annotation-driven></mvc:annotation-driven>

	<context:annotation-config />
	<!-- 把标记了注解的类转换为bean ,这里并不是只扫描controller,要不然concroller注入报错 -->
	<context:component-scan base-package="com.ms.controller" />
	<context:component-scan base-package="com.ms.service" />
	<context:component-scan base-package="com.ms.mapper" />
	<context:component-scan base-package="com.ms.entity" />
 
     <!--启用缓存注解-->
    <cache:annotation-driven cache-manager="cacheManager"/>
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>

   <!-- 配置MultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小限制，单位为字节-10Mb -->
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <!-- 请求的编码格式 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
	
 
	<!-- 视图 beans -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
		<property name="order" value="1" /><!-- 默认视图解析器 -->
	</bean>
	


	<!-- ajax json 返回 -->
   <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <!--json视图拦截器，读取到@ResponseBody的时候去配置它-->
	            <ref bean="mappingJacksonHttpMessageConverter"/>
	        </list>
	    </property>
	</bean>
	<!--json转化器，它可以将结果转化-->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	    <property name="supportedMediaTypes">
	        <list>
	            <value>application/json;charset=UTF-8</value>
	        </list>
	    </property>
	</bean>
    
    
    <!-- 拦截器 ,登录拦截-->
    <mvc:interceptors> 
	   <!-- 多个拦截器，顺序执行 -->
	   <mvc:interceptor> 
		    <mvc:mapping path="/**"/> 
		    <bean class="com.ms.interceptor.LoginInterceptor"></bean> 
	   </mvc:interceptor> 
   </mvc:interceptors> 
 
 
   <!-- 配置全局异常处理的javaBean，这样DispatcherServlet就可以直接访问他 -->
  <bean class="com.ms.common.exception.CustomExceptionResolver"></bean>
   

</beans>
